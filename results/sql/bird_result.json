{
    "0": "SELECT `Percent (%) Eligible Free (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY `Percent (%) Eligible Free (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "1": "SELECT frpm.`School Name`, frpm.`District Name`, frpm.`County Name`, (frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) AS `Eligible Free Rate` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.`StatusType` = 'Active' AND frpm.`School Type` = 'Continuation' ORDER BY `Eligible Free Rate` ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT s.Zip FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND s.DOC = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStreet FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.Phone FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND s.OpenDate > '2000-01-01' AND f.`Charter Funding Type` = 'Directly funded';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS s JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath > 400 AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT DISTINCT s.School FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.NumTstTakr > 500 AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM satscores AS sat JOIN schools AS s ON sat.cds = s.CDSCode ORDER BY sat.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.`FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm )\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores AS sat JOIN schools AS sch ON sat.cds = sch.CDSCode WHERE sat.AvgScrMath > 560 AND sch.FundingType = 'Directly funded';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode ORDER BY satscores.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT DISTINCT frpm.CDSCode FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(f.`Free Meal Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) AS max_eligible_free_rate FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE (CAST(s.NumGE1500 AS DOUBLE) / s.NumTstTakr) > 0.3 AND f.`Enrollment (Ages 5-17)` IS NOT NULL AND f.`Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT sch.Phone FROM satscores sat JOIN schools sch ON sat.cds = sch.CDSCode ORDER BY (CAST(sat.NumGE1500 AS FLOAT) / sat.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.NCESSchool FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode ORDER BY f.`Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.District, AVG(ss.AvgScrRead) AS AvgReadingScore FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE s.StatusType = 'Active' AND s.DOCType = 'District' GROUP BY s.District ORDER BY AvgReadingScore DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Merged' AND schools.County = 'Alameda' AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.School, sat.AvgScrWrite, sch.CharterNum FROM satscores sat JOIN schools sch ON sat.cds = sch.CDSCode WHERE sat.AvgScrWrite > 499 AND sch.CharterNum IS NOT NULL ORDER BY sat.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.FundingType = 'Directly funded' AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT sc.Phone FROM satscores ss JOIN schools sc ON ss.cds = sc.CDSCode ORDER BY ss.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Amador' AND frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Los Angeles' AND frpm.`Free Meal Count (K-12)` > 500 AND frpm.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.School FROM satscores sat JOIN schools s ON sat.cds = s.CDSCode WHERE s.County = 'Contra Costa' ORDER BY sat.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street || ', ' || s.City || ', ' || s.State || ' ' || s.Zip AS FullAddress FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT s.School FROM frpm f JOIN satscores sa ON f.CDSCode = sa.cds JOIN schools s ON f.CDSCode = s.CDSCode WHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1 AND sa.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT DISTINCT s.School, s.FundingType FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = \"Riverside\" AND ss.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.School, s.Street, s.City, s.State, s.Zip FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Monterey' AND f.`High Grade` = '12' AND f.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, sats.AvgScrWrite, s.Phone FROM schools s JOIN satscores sats ON s.CDSCode = sats.cds WHERE (s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01') AND sats.AvgScrWrite IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.School, s.DOCType FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.FundingType = 'Locally funded' GROUP BY s.School, s.DOCType HAVING (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > ( SELECT AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`) FROM frpm f2 JOIN schools s2 ON f2.CDSCode = s2.CDSCode WHERE s2.FundingType = 'Locally funded' );\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.OpenDate FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`School Type` = 'K-12 Schools (Public)' ORDER BY f.`Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT s.City, f.`Enrollment (K-12)` FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY f.`Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT s.School, f.`Percent (%) Eligible Free (K-12)` FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY f.`Enrollment (K-12)` DESC LIMIT 11 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT s.School, f.`FRPM Count (K-12)`, (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) * 100 AS `Eligible FRPM Rate (%)` FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.DOC = '66' ORDER BY f.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT DISTINCT sc.School, sc.Website FROM frpm f JOIN schools sc ON f.CDSCode = sc.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Kacey' AND schools.AdmLName1 = 'Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT schools.AdmEmail1 FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1 FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.NumTstTakr > 0 ORDER BY CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Los Angeles' AND ss.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr) AS avg_num_test_takers FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno' AND schools.OpenDate >= '1980-01-01' AND schools.OpenDate <= '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT sch.Phone FROM satscores sat JOIN schools sch ON sat.cds = sch.CDSCode WHERE sat.dname = 'Fresno Unified' ORDER BY sat.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE s.Virtual = 'F' AND ss.AvgScrRead IS NOT NULL AND ss.AvgScrRead IN ( SELECT ss2.AvgScrRead FROM satscores ss2 JOIN schools s2 ON ss2.cds = s2.CDSCode WHERE s2.Virtual = 'F' AND s2.County = s.County ORDER BY ss2.AvgScrRead DESC LIMIT 5 ) GROUP BY s.County, s.School ORDER BY s.County, ss.AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.EdOpsName FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode WHERE sc.AvgScrMath IS NOT NULL ORDER BY sc.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "43": "SELECT satscores.AvgScrMath, schools.County FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT sc.AvgScrWrite, sch.City FROM satscores sc JOIN schools sch ON sc.cds = sch.CDSCode WHERE sc.NumGE1500 = ( SELECT MAX(sc2.NumGE1500) FROM satscores sc2 ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT sch.School, sat.AvgScrWrite FROM satscores AS sat JOIN schools AS sch ON sat.cds = sch.CDSCode WHERE sch.AdmFName1 = 'Ricci' AND sch.AdmLName1 = 'Ulrich';\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.School, f.`Enrollment (K-12)` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.DOC = '31' AND s.SOCType = 'S' ORDER BY f.`Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS MonthlyAverageSchoolsOpened FROM schools WHERE County = 'Alameda' AND DOC = '52' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '54') * 1.0 / (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '52') AS ratio;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.County, s.School, s.ClosedDate FROM schools s WHERE s.StatusType = 'Closed' AND s.ClosedDate IS NOT NULL AND s.County = ( SELECT s2.County FROM schools s2 WHERE s2.StatusType = 'Closed' GROUP BY s2.County ORDER BY COUNT(*) DESC LIMIT 1 );\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.School, s.Street FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode ORDER BY sc.AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Lakeport' AND (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500;\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(satscores.NumTstTakr) AS TotalTestTakers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE (AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian') OR (AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian') OR (AdmFName3 = 'Avetik' AND AdmLName3 = 'Atoian');\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Colusa') * 1.0 / (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Humboldt') AS Ratio;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND City = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode ORDER BY ss.AvgScrWrite DESC LIMIT 1 OFFSET 332\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND DOC = '52' AND Charter = 1;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Los Angeles' AND schools.Charter = 0 AND (frpm.`Free Meal Count (K-12)` * 100.0 / frpm.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT School, City, AdmFName1 || ' ' || AdmLName1 AS Admin1_FullName, AdmFName2 || ' ' || AdmLName2 AS Admin2_FullName, AdmFName3 || ' ' || AdmLName3 AS Admin3_FullName FROM schools WHERE Charter = 1 AND CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN Charter = 1 AND FundingType = 'Locally funded' THEN 1 END) * 100.0) / COUNT(CASE WHEN Charter = 1 THEN 1 END) AS LocalFundingPercentage FROM schools WHERE County = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Closed' AND DOCType = 'Community College District' AND City = 'San Francisco' AND strftime('%Y', ClosedDate) = '1989';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS num_closures FROM schools WHERE SOC = '11' AND ClosedDate LIKE '198%' GROUP BY County ORDER BY num_closures DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND DOCType = 'District Community Day School'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District FROM schools WHERE City = 'Fresno' AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(f.Enrollment) FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Academic Year` = '2014-2015' AND s.City = 'Fremont' AND s.EdOpsCode = 'SSS';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.MailStreet = 'PO Box 1040' AND schools.DOCType = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.GSoffered FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.NCESDist = '0613360' AND s.EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT schools.EdOpsName, schools.School FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`County Code` = '37' AND frpm.`NSLP Provision Status` = '2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12' AND schools.County = 'Merced' AND frpm.`NSLP Provision Status` = '2' AND frpm.`Educational Option Type` = 'Traditional' AND schools.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.School, f.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND f.`Low Grade` = 'K' AND f.`High Grade` = '9';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT s.GSserved, COUNT(s.GSserved) AS Count FROM schools s WHERE s.City = 'Adelanto' GROUP BY s.GSserved ORDER BY Count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS SchoolCount FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY SchoolCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.SchoolType, s.SchoolName, s.Latitude FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Latitude = (SELECT MAX(Latitude) FROM schools);\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, City, `Low Grade` FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT DISTINCT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(*) AS NumberOfSchools FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Magnet = 1 AND s.GSserved = 'K-8' AND f.`NSLP Provision Status` = 'Multiple Provision Types';  SELECT s.City, COUNT(s.CDSCode) AS NumberOfSchools FROM schools s WHERE s.GSserved = 'K-8' GROUP BY s.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1 AS FirstName, District, COUNT(AdmFName1) AS Count FROM schools WHERE AdmFName1 IS NOT NULL GROUP BY AdmFName1, District ORDER BY Count DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT DISTINCT frpm.`District Code`, frpm.`Percent (%) Eligible Free (K-12)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.AdmLName1 AS Administrator_Last_Name, s.District AS District_Name, s.County AS County_Name, s.School AS School_Name FROM schools s WHERE s.CharterNum = '40';\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND ((SOC = '62' AND DOC = '00') OR DOC = '54') AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (AdmEmail1 IS NOT NULL OR AdmEmail2 IS NOT NULL OR AdmEmail3 IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "88": "SELECT sc.School, sc.AdmEmail1 FROM satscores ss JOIN schools sc ON ss.cds = sc.CDSCode ORDER BY ss.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN district ON account.district_id = district.district_id JOIN loan ON account.account_id = loan.account_id WHERE district.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995' ELSE '1996' END AS year_with_higher_unemployment FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT d.district_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND d.A11 > 6000 AND d.A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'North Bohemia' AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "WITH FemaleClients AS ( SELECT c.client_id, c.birth_date, d.A11 as avg_salary FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' ), OldestFemaleClient AS ( SELECT client_id FROM FemaleClients WHERE birth_date = (SELECT MIN(birth_date) FROM FemaleClients) ), LowestAvgSalary AS ( SELECT MIN(avg_salary) AS low_salary FROM FemaleClients WHERE client_id IN (SELECT client_id FROM OldestFemaleClient) ), HighestAvgSalary AS ( SELECT MAX(avg_salary) AS high_salary FROM FemaleClients ) SELECT a.account_id, (h.high_salary - l.low_salary) AS salary_gap FROM account a JOIN disp d ON a.account_id = d.account_id WHERE d.client_id IN (SELECT client_id FROM OldestFemaleClient), LowestAvgSalary l, HighestAvgSalary h;\t----- bird -----\tfinancial",
    "95": "SELECT a.account_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON c.district_id = dis.district_id WHERE c.birth_date = (SELECT MAX(birth_date) FROM client) ORDER BY dis.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM account JOIN disp ON account.account_id = disp.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK PO OBRATU' AND d.type = 'DISPONENT';\t----- bird -----\tfinancial",
    "98": "SELECT account.account_id, loan.amount FROM account JOIN loan ON account.account_id = loan.account_id WHERE strftime('%Y', loan.date) = '1997' AND loan.status = 'A' AND account.frequency = 'POPLATEK TYDNE' ORDER BY loan.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, l.amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND strftime('%Y', a.date) = '1993' ORDER BY l.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE strftime('%Y', date) = '1995' ORDER BY date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT account.account_id FROM account JOIN trans ON account.account_id = trans.account_id WHERE account.date < '1997-01-01' AND trans.balance > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM trans JOIN account ON trans.account_id = account.account_id WHERE trans.date = '1998-10-14' AND trans.amount = 840;\t----- bird -----\tfinancial",
    "105": "SELECT district.district_id FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(t.amount) AS max_transaction_amount FROM card c JOIN disp d ON c.disp_id = d.disp_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.issued = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 = ( SELECT MAX(district.A11) FROM account JOIN district ON account.district_id = district.district_id ) ORDER BY client.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT t.amount FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN trans t ON a.account_id = t.account_id WHERE d.client_id = ( SELECT d.client_id FROM loan l JOIN disp d ON l.account_id = d.account_id ORDER BY l.amount DESC LIMIT 1 ) ORDER BY t.date ASC, t.trans_id ASC LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND district.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id FROM trans JOIN account ON trans.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND strftime('%Y', account.date) = '1996';\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE l.amount = 98832 AND l.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT account.account_id FROM account JOIN client ON account.district_id = client.district_id JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'Prague' ORDER BY account.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT (CAST(SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) AS REAL) / COUNT(client.client_id)) * 100 AS male_percentage FROM client JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'south Bohemia' AND district.A4 = ( SELECT MAX(sub_district.A4) FROM district sub_district WHERE sub_district.A3 = 'south Bohemia' ) ;\t----- bird -----\tfinancial",
    "116": "SELECT (balance_1998 - balance_1993) * 100.0 / balance_1993 AS increase_rate FROM ( SELECT (SELECT balance FROM trans WHERE account_id = l.account_id AND date = '1993-03-22') AS balance_1993, (SELECT balance FROM trans WHERE account_id = l.account_id AND date = '1998-12-27') AS balance_1998 FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1993-07-05' ORDER BY l.date LIMIT 1 ) AS balances;\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(amount) * 100.0 / (SELECT SUM(amount) FROM loan)) AS percentage_paid_no_issue FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT (CAST(COUNT(CASE WHEN status = 'C' THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS percentage_running_ok FROM loan WHERE amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS district_region FROM account JOIN trans ON account.account_id = trans.account_id JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', trans.date) = '1993' AND account.frequency LIKE 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE date BETWEEN '1995-01-01' AND '2000-12-31' AND district.A2 = 'east Bohemia';\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT loan.account_id, district.A2 AS district, district.A3 AS region FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3 AS district, district.A11 AS average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT district.A2 AS district, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_increment_percentage FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(a.account_id) * 100.0 / (SELECT COUNT(*) FROM account WHERE strftime('%Y', date) = '1993')) AS percentage FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Decin' AND strftime('%Y', a.date) = '1993';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT d.A2 AS district_name, COUNT(*) AS female_account_holders FROM client c JOIN district d ON c.district_id = d.district_id JOIN disp di ON c.client_id = di.client_id JOIN account a ON di.account_id = a.account_id WHERE c.gender = 'F' GROUP BY d.A2 ORDER BY female_account_holders DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT district.A2 AS district_name, trans.amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%' ORDER BY trans.amount DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id LEFT JOIN card cr ON d.disp_id = cr.disp_id WHERE dist.A3 = 'South Bohemia' AND cr.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.A3, COUNT(l.loan_id) AS active_loan_count FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status IN ('C', 'D') GROUP BY d.district_id ORDER BY active_loan_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) AS average_loan_amount FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT A3 AS branch_location, A2 AS district_name FROM district ORDER BY A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(a.account_id) AS num_accounts_opened FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A16 = ( SELECT MAX(A16) FROM district )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT t.account_id) FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.frequency = 'POPLATEK MESICNE' AND t.operation = 'VYBER KARTOU' AND t.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount >= 250000 AND loan.status = 'A' AND account.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN loan ON account.account_id = loan.account_id JOIN district ON account.district_id = district.district_id WHERE (loan.status = 'C' OR loan.status = 'D') AND district.district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(c.client_id) AS male_client_count FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 );\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT d.district_id FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.amount > 10000 AND strftime('%Y', t.date) = '1997';\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT o.account_id FROM `order` o JOIN account a ON o.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE o.k_symbol = 'SIPO' AND d.A3 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT strftime('%m', t.date) AS month, AVG(t.amount) AS average_amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id WHERE t.operation = 'VYBER KARTOU' AND strftime('%Y', t.date) = '2021' GROUP BY month;\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT c.client_id FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.operation = 'VYBER KARTOU' AND strftime('%Y', t.date) = '1998' AND t.amount < ( SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', date) = '1998' );\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN card cd ON d.disp_id = cd.disp_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT account.account_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT account.account_id FROM account JOIN district ON account.district_id = district.district_id JOIN disp ON account.account_id = disp.account_id WHERE district.A2 = 'Tabor' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT disp.type FROM disp JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 8000 AND district.A11 <= 9000 AND disp.type != 'OWNER';\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT t.account_id) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'North Bohemia' AND t.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT d.A2 FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(d.A15) AS average_crimes_1995 FROM district d JOIN account a ON a.district_id = d.district_id WHERE d.A15 > 4000 AND STRFTIME('%Y', a.date) >= '1997';\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT card.card_id) FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE card.type = 'classic' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT (CAST(gold_count AS REAL) / total_count) * 100 AS percent_gold FROM ( SELECT COUNT(*) AS total_count, SUM(CASE WHEN type = 'gold' THEN 1 ELSE 0 END) AS gold_count FROM card WHERE issued < '1998-01-01' );\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) AND d.type = 'OWNER';\t----- bird -----\tfinancial",
    "157": "SELECT district.A15 AS committed_crimes_1995 FROM account JOIN district ON account.district_id = district.district_id WHERE account.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT account.district_id FROM `order` JOIN account ON `order`.account_id = account.account_id WHERE `order`.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT trans.trans_id, trans.date, trans.amount, trans.balance FROM trans JOIN account ON trans.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id WHERE disp.client_id = 3356 AND trans.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM client JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id, d.A2, COUNT(a.account_id) AS num_accounts_with_loans FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status = 'A' GROUP BY d.district_id, d.A2 ORDER BY num_accounts_with_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id FROM `order` JOIN account ON `order`.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE `order`.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT trans.* FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'junior' AND card.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN client.gender = 'F' THEN 1 END) * 100.0) / COUNT(*) AS percentage_of_female_clients FROM client JOIN account ON client.district_id = account.district_id JOIN district ON client.district_id = district.district_id WHERE district.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) * 100.0 / NULLIF(SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END), 0)) AS growth_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (north.A16 - east.A16) AS diff FROM (SELECT A16 FROM district WHERE A3 = 'North Bohemia') AS north, (SELECT A16 FROM district WHERE A3 = 'East Bohemia') AS east;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT');\t----- bird -----\tfinancial",
    "173": "SELECT a.frequency, t.k_symbol FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.account_id = 3 AND t.amount = 3539;\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', client.birth_date) AS birth_year FROM client JOIN disp ON client.client_id = disp.client_id WHERE disp.account_id = 130 AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account JOIN disp ON account.account_id = disp.account_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(l.amount) AS total_debt, l.status FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.client_id = 992 GROUP BY l.status\t----- bird -----\tfinancial",
    "177": "SELECT t.balance, c.gender FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.trans_id = 851 AND c.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(t.amount) AS total_paid FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 617 AND strftime('%Y', t.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN `order` ON disp.account_id = `order`.account_id WHERE client.gender = 'M' AND strftime('%Y', client.birth_date) BETWEEN '1974' AND '1976' AND `order`.amount > 4000 AND `order`.k_symbol = 'SIPO';\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Beroun' AND account.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.gender = 'F' AND card.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT (CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS female_percentage FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district di ON a.district_id = di.district_id WHERE di.A3 = 'Prague';\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT c2.client_id) FROM disp d2 JOIN account a2 ON d2.account_id = a2.account_id JOIN client c2 ON d2.client_id = c2.client_id WHERE a2.frequency = 'POPLATEK TYDNE')) AS percentage_male_clients FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(*) FROM disp JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' AND l.amount = ( SELECT MIN(l2.amount) FROM loan l2 JOIN account a2 ON l2.account_id = a2.account_id WHERE l2.duration > 24 AND a2.date < '1997-01-01' ) ORDER BY a.account_id ASC;\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE strftime('%Y', client.birth_date) = '1920' AND district.A3 LIKE '%east Bohemia%';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) AS average_loan_amount FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D') AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT client.client_id, client.district_id FROM client JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) - (strftime('%m-%d', 'now') < strftime('%m-%d', c.birth_date)) AS age FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' AND atom.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) AS avg_oxygen_atoms FROM ( SELECT m.molecule_id, COUNT(CASE WHEN a.element = 'o' THEN 1 END) AS oxygen_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '-' GROUP BY m.molecule_id );\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bond_count) AS average_single_bonds FROM ( SELECT m.molecule_id, COUNT(b.bond_id) AS single_bond_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = '-' GROUP BY m.molecule_id );\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' AND atom.element = 'na';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT molecule.molecule_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT 100.0 * SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS carbon_percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element <> 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT a.element FROM connected c JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT a.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'h' GROUP BY m.label ORDER BY COUNT(m.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT DISTINCT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT DISTINCT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN ( SELECT DISTINCT molecule_id FROM atom WHERE element = 'sn' );\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT a2.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT (COUNT(DISTINCT m.molecule_id) - COUNT(DISTINCT CASE WHEN a.element = 'f' THEN m.molecule_id END)) * 100.0 / COUNT(DISTINCT m.molecule_id) AS percentage_without_fluorine FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(b.bond_id)) AS percentage FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001' AND c.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS diff FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '=' ORDER BY m.molecule_id ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id)) AS percent FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 1.0 / COUNT(molecule_id)) * 100, 3) as percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT 100.0 * SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id) AS percent FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT a.element, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT bond.bond_type, CASE WHEN molecule.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR010' GROUP BY bond.bond_type ORDER BY COUNT(bond.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '-' AND b.bond_type = '-' GROUP BY m.molecule_id ORDER BY m.molecule_id ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.molecule_id = 'TR009' AND (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT molecule.molecule_id, CASE WHEN molecule.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS carcinogenic_status FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.molecule_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT b.bond_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n' OR a1.element = 'n' AND a2.element = 'p';\t----- bird -----\ttoxicology",
    "244": "SELECT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '=' GROUP BY m.molecule_id ORDER BY COUNT(b.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) AS average_bonds_per_iodine_atom FROM ( SELECT a.atom_id, COUNT(c.bond_id) AS bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element = 'i' GROUP BY a.atom_id ) AS iodine_atom_bonds;\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE c.atom_id LIKE '%_45' OR c.atom_id2 LIKE '%_45';\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected UNION SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR144_8_19' UNION SELECT a2.element FROM atom a2 JOIN connected c ON a2.atom_id = c.atom_id2 WHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = '=' GROUP BY m.molecule_id ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT c.atom_id2 FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT a.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#' UNION SELECT DISTINCT a2.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT 100.0 * COUNT(*) / ( SELECT COUNT(*) FROM bond ) AS percentage_of_most_common_combination FROM ( SELECT a1.element AS element1, a2.element AS element2, COUNT(*) AS combination_count FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id GROUP BY a1.element, a2.element ORDER BY combination_count DESC LIMIT 1 ) AS most_common_combination JOIN connected c ON c.atom_id IN ( SELECT atom_id FROM atom WHERE element = most_common_combination.element1 ) AND c.atom_id2 IN ( SELECT atom_id FROM atom WHERE element = most_common_combination.element2 );\t----- bird -----\ttoxicology",
    "255": "SELECT (CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(b.bond_id)) * 100.0 AS carcinogenic_single_bond_percentage FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) AS total_atoms FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT c.atom_id2 FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 's';\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND (atom.element = 'p' OR atom.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(DISTINCT a.atom_id) * 100.0 / COUNT(DISTINCT total_atoms.atom_id)) AS percent FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom total_atoms ON total_atoms.molecule_id = a.molecule_id WHERE b.bond_type = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT a.element FROM connected c JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT c.bond_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT m.label, COUNT(*) as count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca' GROUP BY m.label ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "271": "SELECT a1.element, a2.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_1_8' AND a1.element IN ('cl', 'c') AND a2.element IN ('cl', 'c') GROUP BY c.bond_id HAVING COUNT(DISTINCT a1.element) = 2;\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE a.element = 'c' AND b.bond_type = '#' AND m.label = '-' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT 100.0 * SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "276": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT a.element FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR000_1_2' UNION SELECT a2.element FROM connected c JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, CASE WHEN m.label = '+' THEN 'Carcinogenic' WHEN m.label = '-' THEN 'Non-Carcinogenic' ELSE 'Unknown' END AS carcinogenic_status FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.atom_id LIKE '%_4'\t----- bird -----\ttoxicology",
    "282": "SELECT (CAST(COUNT(CASE WHEN a.element = 'h' THEN 1 END) AS FLOAT) / COUNT(a.element)) AS ratio, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR006' GROUP BY a.molecule_id;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label, CASE WHEN m.label = '+' THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS carcinogenic_status FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT a1.element AS element1, a2.element AS element2 FROM connected JOIN atom a1 ON connected.atom_id = a1.atom_id JOIN atom a2 ON connected.atom_id2 = a2.atom_id WHERE connected.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT (CAST(COUNT(DISTINCT b.molecule_id) AS FLOAT) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) * 100 AS triple_bond_percentage FROM bond b WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id) AS percent FROM bond b WHERE b.molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN m.label = '+' THEN 'carcinogenic' ELSE 'not carcinogenic' END AS result FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151' AND element IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE substr(molecule_id, 3, 3) >= '010' AND substr(molecule_id, 3, 3) <= '050' AND element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' AND m.label = '+';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_id = 'TR000_1_2' AND a.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' EXCEPT SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "298": "SELECT (CAST(SUM(CASE WHEN molecule.label = '+' AND atom.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT molecule.molecule_id)) * 100.0 AS percentage FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT a.element FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR001_2_4' UNION SELECT DISTINCT a2.element FROM connected c JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(bond.bond_id) AS double_bond_count, molecule.label FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR006' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "304": "SELECT molecule.molecule_id, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT c.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.molecule_id, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE b.bond_type = '#' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "307": "SELECT a1.element, a2.element FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT connected.bond_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT bond.bond_type) AS unique_bond_types FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR346' GROUP BY atom.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules_with_double_bond FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '=' AND m.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element IS NULL OR a.element <> 's' GROUP BY m.molecule_id HAVING COUNT(CASE WHEN b.bond_type = '=' THEN 1 END) = 0;\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT molecule_id FROM molecule WHERE label = '+' INTERSECT SELECT molecule_id FROM atom WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT molecule.molecule_id FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'c' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT 100.0 * SUM(a.element = 'cl') / COUNT(DISTINCT m.molecule_id) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "318": "SELECT bond.molecule_id FROM bond WHERE bond.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT a.element) AS unique_elements_count FROM connected c JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE c.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE c.atom_id = 'TR000_1' AND c.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT a1.molecule_id FROM atom a1 JOIN atom a2 ON a1.molecule_id = a2.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (CAST(COUNT(DISTINCT c.atom_id) AS FLOAT) / COUNT(DISTINCT a.atom_id)) * 100 AS percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'n';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 's' AND b.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT a.element FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR024' AND b.bond_type = '='\t----- bird -----\ttoxicology",
    "329": "SELECT molecule.molecule_id FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' GROUP BY molecule.molecule_id ORDER BY COUNT(atom.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT m.molecule_id) * 100.0) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' AND a.element = 'h' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT m.molecule_id) AS molecule_count_with_single_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'o' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT atom.element, bond.bond_type FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR012' AND b.bond_type = '=' AND a.element = 'c'\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT id, name, cardKingdomFoilId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT DISTINCT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT DISTINCT name FROM cards WHERE faceConvertedManaCost > convertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE edhrecRank < 100 AND frameVersion = '2015';\t----- bird -----\tcard_games",
    "344": "SELECT DISTINCT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "345": "SELECT DISTINCT l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE (c.power = '*' OR c.power IS NULL) AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id AS card_id, r.text AS ruling_text, (CASE WHEN c.hasContentWarning = 1 THEN 'Yes' ELSE 'No' END) AS missing_or_degraded_properties FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "348": "SELECT r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY COUNT(r.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT fd.language FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.asciiName = 'Annul' AND c.number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese' AND fd.language <> 'English';\t----- bird -----\tcard_games",
    "352": "SELECT 100.0 * COUNT(DISTINCT f.uuid) / (SELECT COUNT(DISTINCT c.uuid) FROM cards c) AS percentage FROM foreign_data f WHERE f.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT sets.name, sets.totalSetSize FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = \"Ancestor's Chosen\";\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT st.language FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT l.format, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT (CAST(COUNT(id) FILTER (WHERE borderColor = 'borderless') AS REAL) / COUNT(id)) * 100 AS percentage_borderless FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'German' AND c.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(DISTINCT f.uuid) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.borderColor = 'borderless' AND f.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT 100.0 * (COUNT(fd.id) * 1.0) / (SELECT COUNT(c.id) FROM cards c WHERE c.isStorySpotlight = 1) AS percentage_french_story_spotlight_cards FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.isStorySpotlight = 1 AND fd.language = 'French';\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT DISTINCT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = \"Summon - Angel\" AND (subtypes IS NOT NULL AND subtypes <> \"Angel\");\t----- bird -----\tcard_games",
    "378": "SELECT DISTINCT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.id, c.name, fd.language FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese' AND c.availability NOT LIKE '%,%';  -- Ensure that the card is only available in 'paper', no other formats simultaneously\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT legalities.uuid, foreign_data.language FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE legalities.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(DISTINCT c.uuid) AS future_frame_card_count, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future' GROUP BY l.status;\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT c.name, st.language FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE c.convertedManaCost = 5 AND c.setCode = '10E';\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT c.id, c.colors, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT cards.name FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'uncommon' ORDER BY rulings.date LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomFoilId IS NULL OR power IS NULL);\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT c.types FROM cards c WHERE c.availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT setCode FROM set_translations WHERE language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (CAST(COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) AS REAL) / COUNT(id)) * 100 AS percentage FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;  SELECT ( 100.0 * ( SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0 ) / ( SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 ) ) AS percentage;\t----- bird -----\tcard_games",
    "403": "SELECT c.name, COUNT(fd.id) * 100.0 / (SELECT COUNT(*) FROM foreign_data) AS percentage FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Spanish' GROUP BY c.name;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.code) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Creature' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT c.types FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'German' AND c.types IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE l.format = 'premodern' AND r.text = 'This is a triggered mana ability.' AND c.side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Erica Yang' AND c.availability LIKE '%paper%' AND l.format = 'pauper' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "411": "SELECT c.artist FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid WHERE fd.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT fd.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.type LIKE '%Creature%' AND c.layout = 'normal' AND c.borderColor = 'black' AND c.artist = 'Matthew D. Wilson' AND fd.language = 'French';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 180 AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT 100.0 * COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) / COUNT(*) AS percentage_without_content_warning FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "416": "SELECT (CAST(COUNT(fd.language) AS FLOAT) / CAST(COUNT(*) AS FLOAT)) * 100 AS percentage FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE (c.power IS NULL OR c.power = '*') AND fd.language = 'French'\t----- bird -----\tcard_games",
    "417": "SELECT (CAST(COUNT(CASE WHEN sets.type = 'expansion' THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS percentage FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT DISTINCT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards WHERE isTextless = 1) * 100) AS proportion FROM cards WHERE isTextless = 1 AND layout = 'normal';\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT name, code FROM sets WHERE (mtgoCode IS NULL OR mtgoCode = '') ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT language FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT st.language, s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN cards c ON s.code = c.setCode JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Italian' AND s.block = 'Shadowmoor' GROUP BY s.id, s.name ORDER BY s.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT st.translation FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Russian' ORDER BY s.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT (CAST(COUNT(DISTINCT c.uuid) AS FLOAT) / (SELECT COUNT(DISTINCT c2.uuid) FROM cards c2 JOIN foreign_data fd2 ON c2.uuid = fd2.uuid WHERE fd2.language = 'Chinese Simplified') * 100) AS percentage FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Chinese Simplified' AND c.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese' AND (sets.mtgoCode IS NULL OR sets.mtgoCode = '');\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id), GROUP_CONCAT(id) AS ids FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT id FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE id = 174);\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block = 'Masques' INTERSECT SELECT baseSetSize, code FROM sets WHERE block = 'Mirage';\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT DISTINCT foreign_data.name, foreign_data.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT DISTINCT foreign_data.language, foreign_data.flavorText, foreign_data.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT ( COUNT(CASE WHEN convertedManaCost = 10 THEN 1 END) * 100.0 / COUNT(*) ) AS percentage FROM cards WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT DISTINCT foreign_data.name, foreign_data.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT DISTINCT foreign_data.language, foreign_data.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'Azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT DISTINCT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT DISTINCT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle' AND purchaseUrls IS NOT NULL;\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name = 'Serra Angel' OR name = 'Shrine Keeper' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT set_translations.translation FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT st.id) AS number_of_translations FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT CASE WHEN COUNT(f.id) > 0 THEN 'Yes' ELSE 'No' END AS has_korean_version FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.name = 'Ancestor''s Chosen' AND f.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT sets.baseSetSize FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Eighth Edition' AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT s.mtgocode IS NOT NULL AS appeared_on_mtg_online FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "470": "SELECT sets.releaseDate FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = \"Ancestor's Chosen\";\t----- bird -----\tcard_games",
    "471": "SELECT sets.type FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT DISTINCT CASE WHEN s.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL AND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setCode = 'CSP';\t----- bird -----\tcard_games",
    "478": "SELECT c.* FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND c.number = '4';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT language FROM foreign_data WHERE name = 'Ausgew\u00e4hlter der Ahnen' AND flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT fd.type FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT r.text AS ruling_text FROM cards c JOIN sets s ON c.setCode = s.code JOIN foreign_data fd ON c.uuid = fd.uuid JOIN rulings r ON c.uuid = r.uuid WHERE s.name = 'Coldsnap' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT fd.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards c2 JOIN sets s2 ON c2.setCode = s2.code WHERE s2.name = 'Coldsnap' );\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (CAST(SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100.0 AS percentage FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_incredibly_powerful FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT DISTINCT c.name, r.text, c.hasContentWarning FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT DISTINCT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT st.translation FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.name = 'Tendo Ice Bridge' AND st.language = 'French';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Tenth Edition' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = \"Journey into Nyx Hero's Path\" ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT sets.releaseDate FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT DISTINCT sets.type FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT st.translation FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE s.name = 'Mirrodin' AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT (CAST(SUM(s.isNonFoilOnly = 1) AS FLOAT) / COUNT(s.code)) * 100 AS percentage_non_foil_only FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(s.isOnlineOnly = 1) * 100.0) / COUNT(*) AS online_only_percentage FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.convertedManaCost FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'duel' ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT c.originalReleaseDate, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Legal' ORDER BY c.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT cards.id) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Ba\u01f5a' AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT c.uuid) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Enchantment' AND c.rarity = 'rare' AND c.name = 'Abundance' AND (SELECT COUNT(DISTINCT format) FROM legalities WHERE status = 'Legal' AND uuid = c.uuid) = (SELECT COUNT(DISTINCT format) FROM legalities WHERE uuid = c.uuid);\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, cards.name FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'Banned' GROUP BY legalities.format ORDER BY COUNT(legalities.status = 'Banned') DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT c.artist, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid GROUP BY c.artist HAVING COUNT(c.id) = ( SELECT MIN(card_count) FROM (SELECT artist, COUNT(id) AS card_count FROM cards GROUP BY artist) )\t----- bird -----\tcard_games",
    "521": "SELECT l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = '1997' AND c.artist = 'D. Alexander Gregory' AND l.format = 'legacy' AND c.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "522": "SELECT DISTINCT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(annual_count) AS average_sets_released_per_year, common_language FROM ( SELECT COUNT(s.id) AS annual_count, MAX(language_count) AS max_language_count, common_language FROM ( SELECT strftime('%Y', releaseDate) AS release_year, id FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' ) AS annual_sets JOIN set_translations st ON annual_sets.id = st.setCode JOIN ( SELECT language, COUNT(language) AS language_count FROM set_translations GROUP BY language ) AS language_counts ON st.language = language_counts.language GROUP BY annual_sets.release_year ) AS annual_counts_with_languages JOIN ( SELECT language AS common_language, COUNT(language) AS language_count FROM set_translations GROUP BY language ORDER BY language_count DESC LIMIT 1 ) AS most_common_language ON max_language_count = language_count;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT l.uuid FROM legalities l WHERE l.format = 'oldschool' AND (l.status = 'banned' OR l.status = 'restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT s.name FROM sets s JOIN set_translations st1 ON s.code = st1.setCode LEFT JOIN set_translations st2 ON s.code = st2.setCode AND st2.language LIKE '%Japanese%' WHERE st1.language = 'Korean' AND st2.language IS NULL;\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT c.frameVersion, c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Allen Williams' UNION SELECT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Allen Williams' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT CASE WHEN u1.Reputation > u2.Reputation THEN 'Harlan' ELSE 'Jarrod Dixon' END AS UserWithHigherReputation FROM (SELECT Reputation FROM users WHERE DisplayName = 'Harlan') AS u1, (SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon') AS u2;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(Post.CommentCount) AS TotalComments FROM posts AS Post JOIN users AS User ON Post.OwnerUserId = User.Id WHERE User.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT p.Title, p.AnswerCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = \"Examples for teaching: Correlation does not mean causation\";\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id ORDER BY tags.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie' AND strftime('%Y', badges.Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM badges JOIN users ON badges.UserId = users.Id GROUP BY badges.UserId, users.DisplayName ORDER BY COUNT(badges.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) AS AverageScore FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) AS average_badges_per_user FROM ( SELECT u.Id AS user_id, COUNT(b.Id) AS badge_count FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Views > 200 GROUP BY u.Id );\t----- bird -----\tcodebase_community",
    "557": "SELECT (CAST(COUNT(elder_posts.Id) AS FLOAT) / COUNT(all_posts.Id)) * 100 AS Percentage FROM posts AS all_posts LEFT JOIN ( SELECT posts.Id FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5 AND users.Age > 65 ) AS elder_posts ON all_posts.Id = elder_posts.Id WHERE all_posts.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score = ( SELECT MAX(Score) FROM comments );\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS CommentCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT posts.FavoriteCount FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ParentId = 107829 AND p.CommentCount = 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NOT NULL THEN 'Well-finished' ELSE 'Not well-finished' END AS result FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM votes JOIN users ON votes.UserId = users.Id WHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT (SELECT COUNT(posts.Id) FROM posts WHERE OwnerUserId = 24) * 1.0 / (SELECT COUNT(votes.Id) FROM votes WHERE UserId = 24) AS PostToVoteRatio;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT u.DisplayName FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT posts.Title FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(posts.Score) AS TotalScore, users.WebsiteUrl FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny';\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c JOIN postHistory ph ON c.UserId = ph.UserId JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND ph.UserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(v.BountyAmount) AS TotalBountyAmount FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT DISTINCT users.DisplayName FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount) AS AverageViewCount FROM posts JOIN postTags ON posts.Id = postTags.PostId JOIN tags ON postTags.TagId = tags.Id LEFT JOIN comments ON posts.Id = comments.PostId WHERE tags.TagName = 'humor' GROUP BY posts.Id;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND Date BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM ( SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Name) > 5 ) AS users_with_badges\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b1 ON u.Id = b1.UserId JOIN badges b2 ON u.Id = b2.UserId WHERE u.Location = 'New York' AND b1.Name = 'Teacher' AND b2.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "594": "SELECT users.Id, users.Reputation FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE p.ViewCount >= 1000 GROUP BY ph.PostId, u.Id HAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name AS BadgeName FROM ( SELECT UserId, COUNT(Id) AS CommentCount FROM comments GROUP BY UserId ORDER BY CommentCount DESC LIMIT 1 ) AS top_commenter JOIN users u ON top_commenter.UserId = u.Id LEFT JOIN badges b ON b.UserId = u.Id;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'India' AND b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT (((COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 END) * 1.0) / (COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 END) * 1.0)) - 1) * 100 AS PercentageDifference FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS UniqueCommentUsers FROM postHistory ph LEFT JOIN comments c ON ph.PostId = c.PostId WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT pl.RelatedPostId, p.ViewCount FROM postLinks pl JOIN posts p ON p.Id = pl.PostId WHERE pl.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT p.Score, pl.LinkTypeId FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT DISTINCT p.Id, p.OwnerUserId FROM posts p WHERE p.Score > 60 AND p.OwnerUserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(users.UpVotes) AS average_up_votes, AVG(users.Age) AS average_user_age FROM users JOIN posts ON users.Id = posts.OwnerUserId GROUP BY users.Id HAVING COUNT(posts.Id) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT users.Reputation FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT b.Date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST(COUNT(DISTINCT b.UserId) AS FLOAT) / (SELECT COUNT(*) FROM users)) * 100 AS PercentageWithTeacherBadge FROM badges b WHERE b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(SUM(CASE WHEN u.Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(u.Id)) * 100 AS TeenagerPercentage FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.CreaionDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria' AND b.Name IS NOT NULL AND u.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Supporter' AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(users.Views) FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.Reputation = ( SELECT MIN(Reputation) FROM users );\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT badges.UserId) FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) AS vote_ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT tags.TagName FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN posts s_posts ON tags.ExcerptPostId = s_posts.Id OR tags.WikiPostId = s_posts.Id JOIN tags ON s_posts.Id = tags.ExcerptPostId OR s_posts.Id = tags.WikiPostId WHERE users.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViewCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' OR u.DisplayName = 'Noah Snyder' GROUP BY u.DisplayName ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Matt Parker' GROUP BY p.Id HAVING COUNT(v.Id) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(c.Id) AS NegativeCommentsCount FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Neil McGuigan' AND c.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT p.Tags FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(COUNT(*) AS REAL) / ( SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Community' ) * 100 AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN ( SELECT PostId FROM posts WHERE ',' || Tags || ',' LIKE '%,r,%' ) AS r_posts ON posts.Id = r_posts.PostId WHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT COALESCE(SUM(p1.ViewCount), 0) - COALESCE(SUM(p2.ViewCount), 0) AS ViewCountDifference FROM (SELECT ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Mornington') AS p1, (SELECT ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Amos') AS p2;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT posts.Title, users.DisplayName FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON comments.UserId = users.Id WHERE comments.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location LIKE 'North Pole' AND strftime('%Y', b.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(ph.Id) AS PostHistoryCount, p.LastEditDate FROM posts p JOIN postHistory ph ON ph.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Id\t----- bird -----\tcodebase_community",
    "650": "SELECT u.LastAccessDate, u.Location FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT p2.Title FROM posts p1 JOIN postLinks pl ON p1.Id = pl.PostId OR p1.Id = pl.RelatedPostId JOIN posts p2 ON (pl.PostId = p2.Id OR pl.RelatedPostId = p2.Id) AND p2.Id != p1.Id WHERE p1.Title LIKE 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
    "652": "SELECT posts.Id, badges.Name FROM users JOIN posts ON posts.OwnerUserId = users.Id JOIN badges ON badges.UserId = users.Id WHERE users.DisplayName = 'Samuel' AND strftime('%Y', posts.CreaionDate) = '2013' AND strftime('%Y', badges.Date) = '2013';\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE t.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT related_posts.Title, postLinks.LinkTypeId FROM posts JOIN postLinks ON posts.Id = postLinks.PostId JOIN posts AS related_posts ON postLinks.RelatedPostId = related_posts.Id WHERE posts.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = ( SELECT p2.Id FROM posts p2 WHERE p2.ParentId IS NOT NULL ORDER BY p2.Score DESC LIMIT 1 );\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 AND v.BountyAmount = ( SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8 );\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Id = (SELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT v.PostId) FROM votes v JOIN posts p ON v.PostId = p.Id WHERE strftime('%Y', v.CreationDate) = '2011' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE LasActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(pl.Id) / 12.0 AS avg_links FROM postLinks pl JOIN posts p ON pl.PostId = p.Id WHERE strftime('%Y', pl.CreationDate) = '2010' AND (p.AnswerCount <= 2 OR p.AnswerCount IS NULL);\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title FROM postLinks JOIN posts ON postLinks.PostId = posts.Id ORDER BY postLinks.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users JOIN ( SELECT UserId, COUNT(Name) AS BadgeCount FROM badges GROUP BY UserId ORDER BY BadgeCount DESC LIMIT 1 ) AS TopUser ON users.Id = TopUser.UserId;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) AS FirstVoteDate FROM users JOIN votes ON users.Id = votes.UserId WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(p.CreaionDate) AS FirstPostDate FROM posts p JOIN ( SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users) ) AS youngest_user ON p.OwnerUserId = youngest_user.Id;\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Autobiographer' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(VoteCount) AS AveragePostsVotedByOldestUsers FROM ( SELECT u.Id, COUNT(v.PostId) AS VoteCount FROM users u LEFT JOIN votes v ON u.Id = v.UserId WHERE u.Age = (SELECT MAX(Age) FROM users) GROUP BY u.Id ) AS OldestUsersVoteCounts;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND strftime('%Y', posts.CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(p.Score) AS AverageScore FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount > 20000 AND p.CreaionDate BETWEEN '2011-01-01' AND '2011-12-31';\t----- bird -----\tcodebase_community",
    "682": "SELECT Id, OwnerDisplayName FROM posts WHERE strftime('%Y', CreaionDate) = '2010' ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(posts.Id) AS FLOAT) / (SELECT COUNT(posts.Id) FROM posts WHERE strftime('%Y', CreaionDate) = '2011') * 100) AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', CreaionDate) = '2011' AND users.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM users)) AS percentage FROM users WHERE Age BETWEEN 13 AND 19;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts );\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = ( SELECT Id FROM posts ORDER BY Score DESC LIMIT 1 );\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT users.DisplayName, users.Location FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Id = 183 ORDER BY posts.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' ORDER BY b.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT julianday(b.Date) - julianday(u.CreationDate) AS days FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(DISTINCT posts.Id) AS NumberOfPosts, COUNT(DISTINCT comments.Id) AS NumberOfComments FROM users LEFT JOIN posts ON posts.OwnerUserId = users.Id LEFT JOIN comments ON comments.UserId = users.Id WHERE users.CreationDate = (SELECT MAX(CreationDate) FROM users);\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.DisplayName FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Clustering 1D data') AS CommentCount, (SELECT COUNT(*) FROM posts a JOIN posts p ON a.ParentId = p.Id WHERE p.Title = 'Clustering 1D data') AS AnswerCount FROM posts WHERE Title = 'Clustering 1D data' LIMIT 1;\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (CAST(SUM(CASE WHEN p.Score > 50 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(p.Id)) * 100 AS Percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Id = ( SELECT u2.Id FROM users u2 ORDER BY u2.Reputation DESC LIMIT 1 );\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT u.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%http://%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.CommentCount = 1 AND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Score = 0 AND u.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = \"R is also lazy evaluated.\";\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT (CAST(COUNT(DISTINCT u.Id) AS FLOAT) / CAST(COUNT(DISTINCT c.UserId) AS FLOAT)) * 100 AS percentage_with_zero_upvotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10 AND u.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_id) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.id HAVING COUNT(hp.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT s.id) AS num_superheroes FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN colour eye_colour ON s.eye_colour_id = eye_colour.id JOIN colour hair_colour ON s.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.id) AS popularity FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN publisher p ON s.publisher_id = p.id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT h.id) FROM superhero h JOIN gender g ON h.gender_id = g.id JOIN hero_attribute ha ON h.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY COUNT(hp.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT 100.0 * SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) / COUNT(sh.id) AS bad_alignment_percentage, SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_superheroes FROM superhero sh JOIN alignment a ON sh.alignment_id = a.id JOIN publisher p ON sh.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "744": "SELECT abs(marvel_count - dc_count) AS difference_in_superheroes FROM (SELECT (SELECT COUNT(*) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS marvel_count,  (SELECT COUNT(*) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS dc_count );\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT s.superhero_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT s.superhero_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.height_cm BETWEEN 170 AND 190 AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE hp.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT s.full_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "757": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN race r ON s.race_id = r.id JOIN colour c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "759": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id ORDER BY superhero.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(s.id) * 100.0 / COUNT(*)) AS marvel_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180 AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "761": "SELECT s.superhero_name FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Male' AND s.weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero );\t----- bird -----\tsuperhero",
    "762": "SELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY sp.power_name ORDER BY COUNT(sp.power_name) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT superpower.power_name FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(s.id) * 1.0 / (SELECT COUNT(*) FROM superhero) AS average_no_skin_colour FROM superhero s WHERE s.skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'Durability' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id JOIN colour c3 ON s.skin_colour_id = c3.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT DISTINCT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) * 100) AS percentage_of_blue_female_superheroes FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "776": "SELECT s.superhero_name, r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT s.height_cm FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id WHERE c1.colour = 'Black' AND c2.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN colour sc ON s.skin_colour_id = sc.id WHERE sc.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' );\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT 100.0 * COUNT(DISTINCT superhero.id) / ( SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ) AS female_heroes_percentage FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(s.weight_kg) AS average_weight FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) AS average_height FROM superhero;\t----- bird -----\tsuperhero",
    "792": "SELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id JOIN gender ON superhero.gender_id = gender.id WHERE race.id = 21 AND gender.id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1;\t----- bird -----\tsuperhero",
    "800": "SELECT (CAST(COUNT(s.id) AS FLOAT) / (SELECT COUNT(*) FROM superhero) * 100.0) AS percentage_of_blue_eyed_superheroes FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Blue';\t----- bird -----\tsuperhero",
    "801": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS male_to_female_ratio FROM superhero LIMIT 1;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN race ON superhero.race_id = race.id WHERE hero_attribute.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute );\t----- bird -----\tsuperhero",
    "811": "SELECT a.alignment, sp.power_name FROM superhero AS s JOIN alignment AS a ON s.alignment_id = a.id JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT s.full_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT colour.colour FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE gender.id = 2 AND alignment.id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.hair_colour_id = colour.id JOIN race ON superhero.race_id = race.id WHERE gender.gender = 'Male' AND colour.colour = 'blue';\t----- bird -----\tsuperhero",
    "818": "SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 2)) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.alignment_id = 2 AND g.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN s.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN s.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS diff FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "825": "SELECT g.gender FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN gender g ON s.gender_id = g.id WHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race <> 'Human';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(dc_count - marvel_count) AS difference FROM ( SELECT (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS dc_count, (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS marvel_count );\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s2 JOIN publisher p2 ON s2.publisher_id = p2.id WHERE p2.publisher_name = 'George Lucas') ) AS percentage_female FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas' AND g.gender = 'Female';\t----- bird -----\tsuperhero",
    "835": "SELECT 100.0 * COUNT(CASE WHEN alignment.alignment = 'Good' THEN 1 END) / COUNT(superhero.id) AS percentage_good_superheroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg < 100 AND c.colour = 'Brown';\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT s.weight_kg, r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "843": "SELECT hero_power.hero_id FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 20 ORDER BY q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
    "847": "SELECT d.surname FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 19 ORDER BY CAST(q.q2 AS TIME) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT races.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT r.round FROM results res JOIN constructors c ON res.constructorId = c.constructorId JOIN races r ON res.raceId = r.raceId WHERE c.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.country NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT constructors.nationality FROM results JOIN constructors ON results.constructorId = constructors.constructorId WHERE results.raceId = 24 AND results.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT drivers.nationality FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.raceId = 355 AND qualifying.q2 = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT q.number FROM qualifying q JOIN results r ON q.raceId = r.raceId AND q.driverId = r.driverId WHERE q.raceId = 903 AND q.q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) AS non_finishers FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2007 AND races.name = 'Bahrain Grand Prix' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "863": "SELECT seasons.url FROM races JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(r.driverId) AS finished_drivers FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.date = '2015-11-29' AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename || ' ' || d.surname AS full_name, d.url FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.raceId = 161 AND lt.time LIKE '1:27%';\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933 ) AND r.raceId = 933;\t----- bird -----\tformula_1",
    "868": "SELECT circuits.location, circuits.lat, circuits.lng FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 9 ORDER BY constructorResults.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Lucas' AND drivers.surname = 'di Grassi' AND qualifying.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.q2 = '0:01:15' AND q.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT d.code FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 45 AND q.q3 LIKE '1:33%';\t----- bird -----\tformula_1",
    "873": "SELECT r.time FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 743 AND d.surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2006 AND ra.name = 'San Marino Grand Prix' AND r.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT seasons.url FROM races JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN status s ON r.statusId = s.statusId WHERE ra.date = '2015-11-29' AND s.status != 'Finished';\t----- bird -----\tformula_1",
    "877": "SELECT d.driverRef, d.dob FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN status s ON r.statusId = s.statusId WHERE r.raceId = 872 AND s.status = 'Finished' ORDER BY d.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.raceId = 348 ORDER BY lt.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId ORDER BY CAST(r.fastestLapSpeed AS REAL) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percent_faster FROM results r1 JOIN drivers d ON r1.driverId = d.driverId JOIN results r2 ON r2.driverId = d.driverId AND r2.raceId = r1.raceId + 1 WHERE d.forename = 'Paul' AND d.surname = 'di Resta' AND r1.raceId = 853;\t----- bird -----\tformula_1",
    "881": "SELECT (COUNT(results.driverId) FILTER (WHERE results.time IS NOT NULL) * 100.0 / COUNT(results.driverId)) AS completion_rate FROM races JOIN results ON races.raceId = results.raceId WHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS number_of_races, GROUP_CONCAT(name, ', ') AS race_names FROM ( SELECT name FROM races WHERE year = 2005 ORDER BY name DESC );\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE strftime('%Y-%m', date) = ( SELECT strftime('%Y-%m', MIN(date)) FROM races );\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999);\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 EXCEPT SELECT name FROM races WHERE year = 2000;\t----- bird -----\tformula_1",
    "888": "SELECT c.country, c.name, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix' ORDER BY r.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(races.year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(*) AS number_of_seasons FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId WHERE ra.year = 2010 AND c.name LIKE '%Singapore%' ORDER BY r.positionOrder;\t----- bird -----\tformula_1",
    "892": "SELECT d.forename, d.surname, SUM(r.points) as total_points FROM results r JOIN drivers d ON r.driverId = d.driverId GROUP BY d.driverId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename || ' ' || d.surname AS driver_name, r.points FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2017 AND ra.name = 'Chinese Grand Prix' ORDER BY r.positionOrder ASC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT drivers.forename, drivers.surname, races.name, lapTimes.time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE lapTimes.milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes );\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.year = 2009 AND races.name = 'Malaysian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * SUM(CASE WHEN results.position <> 1 THEN 1 ELSE 0 END) / COUNT(results.raceId) AS percentage_not_in_first_position FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.surname = 'Hamilton' AND races.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, MAX(ds.points) AS max_points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId GROUP BY d.forename, d.surname, d.nationality ORDER BY SUM(ds.wins) DESC, max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, (strftime('%Y', 'now') - strftime('%Y', dob)) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId HAVING COUNT(races.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2006 AND circuits.country = 'USA';\t----- bird -----\tformula_1",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%Y-%m', races.date) = '2005-09';\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId JOIN drivers d ON r.driverId = d.driverId WHERE c.name = 'Sepang International Circuit' AND d.forename = 'Michael' AND d.surname = 'Schumacher' AND r.position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM lapTimes JOIN results ON lapTimes.raceId = results.raceId AND lapTimes.driverId = results.driverId JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY lapTimes.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(r.points) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Eddie' AND d.surname = 'Irvine' AND ra.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.year ASC, races.round ASC LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT races.name, races.year, circuits.location FROM races JOIN results ON races.raceId = results.raceId JOIN circuits ON races.circuitId = circuits.circuitId GROUP BY results.raceId ORDER BY SUM(results.laps) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix')) AS percentage FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix' AND c.country = 'Germany';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT drivers.nationality FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT races.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.circuitRef = 'silverstone'\t----- bird -----\tformula_1",
    "922": "SELECT races.date, races.time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.location = 'Abu Dhabi';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(lt.time) AS fastestLapTime FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND lt.time IS NOT NULL;\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results );\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.positionOrder = 1 ;\t----- bird -----\tformula_1",
    "929": "SELECT races.raceId, races.name, races.date, races.url FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name, r.date, r.year, r.round FROM results res JOIN races r ON res.raceId = r.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(CAST(fastestLapSpeed AS REAL)) AS fastestLapSpeed FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT results.positionOrder FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE r.grid = 4 AND ra.year = 1989 AND ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT lt.fastestLapTime FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId JOIN (SELECT raceId, driverId, MIN(milliseconds) AS fastestLapTimeMilliseconds FROM lapTimes GROUP BY raceId, driverId) lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton' LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT results.time FROM races JOIN results ON races.raceId = results.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.rank = 2;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename || ' ' || d.surname AS driverName, d.url FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionText = '1';\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT d.driverId) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND d.nationality = 'British';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT d.driverId) FROM results r JOIN races rc ON r.raceId = rc.raceId JOIN drivers d ON r.driverId = d.driverId WHERE rc.year = 2008 AND rc.name = 'Chinese Grand Prix' AND r.time IS NOT NULL AND EXISTS ( SELECT 1 FROM results r2 WHERE r2.driverId = d.driverId AND r2.position IS NOT NULL );\t----- bird -----\tformula_1",
    "941": "SELECT SUM(r.points) AS total_points FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG( (CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 60) + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1) AS REAL) ) AS average_fastest_lap_time_seconds FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN r.time IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(r.raceId) AS completion_rate FROM races ra JOIN results r ON ra.raceId = r.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ((last_driver_time - champion_time) / last_driver_time) * 100 AS percentage_difference FROM ( SELECT (SELECT milliseconds FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionOrder = 1) AS champion_time, (SELECT milliseconds FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = ra.raceId AND time IS NOT NULL)) AS last_driver_time ) times;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(cr.points) AS maximum_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.name, SUM(cr.points) as total_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId GROUP BY c.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT cr.constructorId) AS num_japanese_constructors FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'Japanese' GROUP BY cr.constructorId HAVING COUNT(DISTINCT cr.raceId) = 2 AND SUM(cr.points) = 0;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT constructors.name FROM constructors JOIN results ON constructors.constructorId = results.constructorId WHERE results.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors JOIN results ON constructors.constructorId = results.constructorId JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT (CAST(SUM(CASE WHEN r.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS race_completion_percentage FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'Japanese' AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(CAST((SUBSTR(res.time, 1, 2) * 3600 + SUBSTR(res.time, 4, 2) * 60 + SUBSTR(res.time, 7)) AS REAL)) AS average_time_seconds FROM results res JOIN races r ON res.raceId = r.raceId WHERE r.year < 1975 AND res.position = 1 AND res.time IS NOT NULL GROUP BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.rank = 2 AND strftime('%Y', d.dob) > '1975';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.nationality = 'Italian' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE results.milliseconds = ( SELECT MIN(milliseconds) FROM results WHERE milliseconds IS NOT NULL );\t----- bird -----\tformula_1",
    "959": "SELECT r.fastestLap FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN driverStandings ds ON ds.raceId = ra.raceId AND ds.driverId = r.driverId WHERE ra.year = 2009 AND ds.position = 1 ORDER BY ra.date DESC, r.positionOrder LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(CAST(r.fastestLapSpeed AS REAL)) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2009 AND ra.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "961": "SELECT r.name, r.year FROM results res JOIN races r ON res.raceId = r.raceId WHERE res.milliseconds IS NOT NULL ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT 100.0 * COUNT(DISTINCT lt.driverId) / COUNT(*) AS percentage FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.year BETWEEN 2000 AND 2005 AND d.dob < '1985-01-01' AND lt.lap > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.milliseconds < 120000 AND drivers.nationality = 'French';\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT code, dob FROM drivers ORDER BY dob DESC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT d.driverId, d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND d.nationality = 'German' ORDER BY lt.time LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT DISTINCT d.driverId, d.code FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE strftime('%Y', d.dob) = '1971' AND r.fastestLap IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT d.driverId, d.forename, d.surname, MAX(lt.time) AS latestLapTime FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.dob < '1982-01-01' AND d.nationality = 'Spanish' GROUP BY d.driverId, d.forename, d.surname ORDER BY latestLapTime DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime IS NOT NULL ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT year FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE milliseconds = ( SELECT MAX(milliseconds) FROM lapTimes );\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "978": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria';\t----- bird -----\tformula_1",
    "979": "SELECT r.raceId, r.year, r.round, COUNT(*) as finishers FROM results res JOIN races r ON r.raceId = res.raceId WHERE res.time IS NOT NULL GROUP BY r.raceId, r.year, r.round ORDER BY finishers DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.nationality, d.dob FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 23 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM qualifying q JOIN races r ON q.raceId = r.raceId WHERE q.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY r.date LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN status ON results.statusId = status.statusId WHERE drivers.nationality = 'American' AND status.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructors.nationality = 'Italian' GROUP BY constructors.constructorId ORDER BY SUM(constructorResults.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId GROUP BY c.constructorId ORDER BY SUM(cs.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE r.name = 'French Grand Prix' AND lt.lap = 3 ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT raceId, MIN(milliseconds) AS fastestTime FROM lapTimes GROUP BY raceId ORDER BY fastestTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 60 * 1000 + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1, INSTR(fastestLapTime, '.') - INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 1000 + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, '.') + 1) AS INTEGER) AS REAL) / 1000.0 AS average_fastest_lap_seconds FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'United States Grand Prix' AND races.year = 2006 AND results.rank <= 10;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename || ' ' || d.surname AS full_name, AVG(CAST(ps.milliseconds AS FLOAT) / 1000.0) AS avg_pit_stop_duration_seconds FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverId, d.forename, d.surname ORDER BY avg_pit_stop_duration_seconds ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM results JOIN races ON results.raceId = races.raceId JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' ORDER BY results.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE strftime('%Y', dob) BETWEEN '1981' AND '1991' AND nationality = 'Austrian';\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS fullName, url, dob FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT SUM(cr.points) AS total_points, c.name, c.nationality FROM races r JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.year BETWEEN 1980 AND 2010 AND r.name = 'Monaco Grand Prix' GROUP BY cr.constructorId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) AS average_score FROM results JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId JOIN drivers ON results.driverId = drivers.driverId WHERE circuits.name LIKE '%Turkish Grand Prix%' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) AS avg_races FROM ( SELECT year, COUNT(*) as race_count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year );\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT SUM(ds.wins) FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId WHERE ds.position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM results res JOIN races r ON res.raceId = r.raceId WHERE res.fastestLapTime = ( SELECT MIN(CAST(fastestLapTime AS TIME)) FROM results ) LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location || ', ' || circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId ORDER BY races.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT drivers.forename, drivers.surname FROM qualifying JOIN races ON qualifying.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId JOIN drivers ON qualifying.driverId = drivers.driverId WHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = races.raceId);\t----- bird -----\tformula_1",
    "1002": "SELECT drivers.forename || ' ' || drivers.surname AS fullName, drivers.nationality, races.name AS raceName FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results JOIN races ON results.raceId = races.raceId JOIN status ON results.statusId = status.statusId WHERE races.name = 'Canadian Grand Prix' AND status.status = 'Accident' AND results.driverId = ( SELECT driverId FROM results JOIN races ON results.raceId = races.raceId JOIN status ON results.statusId = status.statusId WHERE races.name = 'Canadian Grand Prix' AND status.status = 'Accident' GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1 );\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, ds.wins FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.driverId, ds.wins ORDER BY ds.wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pit_stop_duration FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(CAST(p.duration AS REAL)) AS longest_duration FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT ps.lap FROM pitStops ps JOIN races r ON ps.raceId = r.raceId JOIN drivers d ON ps.driverId = d.driverId WHERE r.year = 2011 AND r.name = 'Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.forename, drivers.surname, pitStops.duration FROM pitStops JOIN races ON pitStops.raceId = races.raceId JOIN drivers ON pitStops.driverId = drivers.driverId WHERE races.name = 'Australian Grand Prix' AND races.year = 2011;\t----- bird -----\tformula_1",
    "1010": "SELECT r.raceId, r.fastestLapTime FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.fastestLapTime IS NOT NULL ORDER BY r.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId ORDER BY lt.milliseconds ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT c.name AS circuitName, l.time AS fastestLapTime FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId JOIN races r ON l.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY l.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1013": "SELECT l.time FROM lapTimes l JOIN races r ON l.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' ORDER BY l.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1014": "SELECT c.circuitRef, l.time FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE c.country = 'Italy' GROUP BY c.circuitRef, l.driverId, l.lap HAVING l.milliseconds = MIN(l.milliseconds) ORDER BY l.milliseconds ASC;\t----- bird -----\tformula_1",
    "1015": "SELECT r.name, l.raceId, l.driverId, l.time FROM lapTimes l JOIN races r ON l.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' ORDER BY l.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT ps.duration FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN pitStops ps ON lt.raceId = ps.raceId AND lt.driverId = ps.driverId WHERE c.circuitRef = 'austria' ORDER BY lt.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON races.circuitId = circuits.circuitId JOIN lapTimes ON lapTimes.raceId = races.raceId WHERE lapTimes.time = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) AS average_pit_stop_time FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time_milliseconds FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, MAX(height) FROM Player;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name FROM Match m JOIN League l ON m.league_id = l.id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT t.team_long_name FROM Match m JOIN Team t ON m.home_team_api_id = t.team_api_id WHERE m.season = '2015/2016' AND (m.home_team_goal - m.away_team_goal) < 0 GROUP BY m.home_team_api_id ORDER BY COUNT(m.id) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Team.team_long_name FROM Match JOIN League ON Match.league_id = League.id JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal GROUP BY Match.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team_api_id, buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal GROUP BY League.name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.sprint_speed >= 97 AND date BETWEEN '2013-01-01' AND '2015-12-31' GROUP BY Player.player_api_id;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT League.name, COUNT(Match.id) AS match_count FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.id ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date, 1, 4) = '2010' GROUP BY player_api_id HAVING MAX(overall_rating) > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date, 1, 4) = '2010' ) ORDER BY MAX(overall_rating) DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T.team_long_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE strftime('%Y', TA.date) = '2012' AND TA.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL )\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (CAST(SUM(preferred_foot = 'left') AS FLOAT) / COUNT(*)) * 100 AS percentage_left_foot FROM Player JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM Match m JOIN League l ON m.league_id = l.id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(pa.long_shots) AS average_long_shots FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 GROUP BY pa.player_fifa_api_id ORDER BY AVG(pa.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal' AND Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-12-31 23:59:59' AND Team_Attributes.chanceCreationPassing < ( SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-12-31 23:59:59' ) ORDER BY Team_Attributes.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE SUBSTR(birthday, 1, 4) = '1970' AND SUBSTR(birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT Player_Attributes.attacking_work_rate FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT ta.buildUpPlayPositioningClass FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT pa.heading_accuracy FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Francois Affolter' AND pa.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT pa.overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND League.name = 'Scotland Premier League';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT Player.preferred_foot FROM Player ORDER BY Player.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE pa.potential = ( SELECT MAX(potential) FROM Player_Attributes );\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T.team_short_name FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE TA.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT pa.defensive_work_rate FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(m.home_team_goal) AS average_home_team_goal FROM Match m JOIN Country c ON m.country_id = c.id WHERE c.name = 'Poland' AND m.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT p.player_name, AVG(pa.finishing) AS avg_finishing FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE p.height = (SELECT MAX(height) FROM Player) OR p.height = (SELECT MIN(height) FROM Player) GROUP BY p.player_name ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE strftime('%Y', pa.date) BETWEEN '2008' AND '2010' AND pa.overall_rating > 80;\t----- bird -----\teuropean_football_2",
    "1063": "SELECT pa.potential FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT DISTINCT buildUpPlayPassingClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player_Attributes.date) BETWEEN '2010' AND '2015' AND Player.height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM Country JOIN League ON Country.id = League.country_id WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE m.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = 61 AND pa.balance = ( SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61 );\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS diff FROM Player p1 JOIN Player_Attributes pa1 ON p1.player_api_id = pa1.player_api_id AND p1.player_name = 'Abdou Diallo' CROSS JOIN Player p2 JOIN Player_Attributes pa2 ON p2.player_api_id = pa2.player_api_id AND p2.player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name LIKE 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT p.player_name, pa.strength FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id ORDER BY pa.strength DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT pa.player_api_id) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT p.player_name, pa.crossing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Alexis' OR p.player_name = 'Ariel Borysiuk' OR p.player_name = 'Arouna Kone' ORDER BY pa.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT Player_Attributes.heading_accuracy FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 AND pa.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Belgium' AND Match.season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2008/2009' GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) AS average_overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE CAST(strftime('%Y', p.birthday) AS INTEGER) < 1986;\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ( (pa1.overall_rating - pa2.overall_rating) / CAST(pa2.overall_rating AS FLOAT) * 100 ) AS percentage_higher FROM Player_Attributes pa1 JOIN Player p1 ON pa1.player_api_id = p1.player_api_id JOIN Player_Attributes pa2 ON pa2.player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel' ) WHERE p1.player_name = 'Ariel Borysiuk' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(ta.buildUpPlaySpeed) AS average_build_up_play_speed FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes T1 JOIN Player T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(PA.crossing) FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(Team_Attributes.chanceCreationPassing) AS max_chanceCreationPassing, Team_Attributes.chanceCreationPassingClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT DISTINCT preferred_foot FROM Player_Attributes JOIN Player ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(PA.overall_rating) AS highest_overall_rating FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match AS M JOIN Team AS T ON M.away_team_api_id = T.team_api_id JOIN Country AS C ON M.country_id = C.id WHERE T.team_long_name = 'Parma' AND C.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating = 77 AND pa.date LIKE '2016-06-23%' ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT pa.overall_rating FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT pa.potential FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Francesco Parravicini' AND pa.date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT pa.attacking_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT pa.defensive_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT p.date FROM Player_Attributes p JOIN Player pl ON p.player_api_id = pl.player_api_id WHERE pl.player_name = 'Kevin Constant' AND p.crossing = ( SELECT MAX(p2.crossing) FROM Player_Attributes p2 JOIN Player pl2 ON p2.player_api_id = pl2.player_api_id WHERE pl2.player_name = 'Kevin Constant' ) ORDER BY p.date ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT DISTINCT ta.buildUpPlaySpeedClass FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'Willem II' AND ta.date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT ta.buildUpPlayDribblingClass FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_short_name = 'LEI' AND ta.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT ta.buildUpPlayPassingClass FROM Team t JOIN Team_Attributes ta ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'FC Lorient' AND ta.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT ta.chanceCreationPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT ta.chanceCreationCrossingClass FROM Team AS t JOIN Team_Attributes AS ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'Hull City' AND ta.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT Team_Attributes.defenceAggressionClass FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(pa.overall_rating) AS average_overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.date BETWEEN '2007-02-22' AND '2016-04-21' AND p.player_name = 'Marko Arnautovic';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((ld_attr.overall_rating - jb_attr.overall_rating) * 1.0 / jb_attr.overall_rating) * 100 AS percentage_difference FROM Player ld JOIN Player_Attributes ld_attr ON ld.player_api_id = ld_attr.player_api_id JOIN Player jb ON jb.player_name = 'Jordan Bowery' JOIN Player_Attributes jb_attr ON jb.player_api_id = jb_attr.player_api_id WHERE ld.player_name = 'Landon Donovan' AND ld_attr.date = '2013-07-12' AND jb_attr.date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', birthday)) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) AS total_home_goals_by_aaron_lennon FROM Match JOIN Player ON Player.player_api_id IN ( home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11 ) WHERE Player.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(m.away_team_goal) AS total_away_goals FROM \"Match\" m JOIN \"Player\" p1 ON m.away_player_1 = p1.player_api_id OR m.away_player_2 = p1.player_api_id OR m.away_player_3 = p1.player_api_id OR m.away_player_4 = p1.player_api_id OR m.away_player_5 = p1.player_api_id OR m.away_player_6 = p1.player_api_id OR m.away_player_7 = p1.player_api_id OR m.away_player_8 = p1.player_api_id OR m.away_player_9 = p1.player_api_id OR m.away_player_10 = p1.player_api_id OR m.away_player_11 = p1.player_api_id JOIN \"Player\" p2 ON m.away_player_1 = p2.player_api_id OR m.away_player_2 = p2.player_api_id OR m.away_player_3 = p2.player_api_id OR m.away_player_4 = p2.player_api_id OR m.away_player_5 = p2.player_api_id OR m.away_player_6 = p2.player_api_id OR m.away_player_7 = p2.player_api_id OR m.away_player_8 = p2.player_api_id OR m.away_player_9 = p2.player_api_id OR m.away_player_10 = p2.player_api_id OR m.away_player_11 = p2.player_api_id WHERE (p1.player_name = 'Daan Smith' AND p2.player_name = 'Filipe Ferreira') OR (p2.player_name = 'Daan Smith' AND p1.player_name = 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(m.home_team_goal) AS total_home_goals FROM \"Match\" m JOIN Player p1 ON m.home_player_1 = p1.player_api_id JOIN Player p2 ON m.home_player_2 = p2.player_api_id JOIN Player p3 ON m.home_player_3 = p3.player_api_id JOIN Player p4 ON m.home_player_4 = p4.player_api_id JOIN Player p5 ON m.home_player_5 = p5.player_api_id JOIN Player p6 ON m.home_player_6 = p6.player_api_id JOIN Player p7 ON m.home_player_7 = p7.player_api_id JOIN Player p8 ON m.home_player_8 = p8.player_api_id JOIN Player p9 ON m.home_player_9 = p9.player_api_id JOIN Player p10 ON m.home_player_10 = p10.player_api_id JOIN Player p11 ON m.home_player_11 = p11.player_api_id WHERE (strftime('%Y', 'now')*1 - strftime('%Y', p1.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p2.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p3.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p4.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p5.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p6.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p7.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p8.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p9.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p10.birthday)*1 < 31) OR (strftime('%Y', 'now')*1 - strftime('%Y', p11.birthday)*1 < 31);\t----- bird -----\teuropean_football_2",
    "1122": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT P.player_name FROM Player_Attributes AS PA JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.finishing = 1 ORDER BY datetime(p.birthday) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT Player.player_name FROM Player JOIN Match ON Player.player_api_id = Match.home_player_1 OR Player.player_api_id = Match.home_player_2 OR Player.player_api_id = Match.home_player_3 OR Player.player_api_id = Match.home_player_4 OR Player.player_api_id = Match.home_player_5 OR Player.player_api_id = Match.home_player_6 OR Player.player_api_id = Match.home_player_7 OR Player.player_api_id = Match.home_player_8 OR Player.player_api_id = Match.home_player_9 OR Player.player_api_id = Match.home_player_10 OR Player.player_api_id = Match.home_player_11 OR Player.player_api_id = Match.away_player_1 OR Player.player_api_id = Match.away_player_2 OR Player.player_api_id = Match.away_player_3 OR Player.player_api_id = Match.away_player_4 OR Player.player_api_id = Match.away_player_5 OR Player.player_api_id = Match.away_player_6 OR Player.player_api_id = Match.away_player_7 OR Player.player_api_id = Match.away_player_8 OR Player.player_api_id = Match.away_player_9 OR Player.player_api_id = Match.away_player_10 OR Player.player_api_id = Match.away_player_11 JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT c.name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Match m ON p.player_api_id IN ( m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11, m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5, m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11 ) JOIN Country c ON m.country_id = c.id WHERE pa.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "SELECT c.name AS country_name, AVG(p.weight) AS average_weight FROM Player p JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 JOIN Country c ON m.country_id = c.id GROUP BY c.name ORDER BY average_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(Player.height) AS average_height FROM Player JOIN Match ON Player.player_api_id = Match.home_player_1 JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6 LIMIT 1) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23 LIMIT 1) AS DIFFERENCE;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes)) AS percentage FROM Player_Attributes WHERE strength > 80 AND stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM Country JOIN League ON Country.id = League.country_id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT m.home_team_goal, m.away_team_goal FROM Match m JOIN League l ON m.league_id = l.id WHERE m.date LIKE '2008-09-24%' AND l.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT Player_Attributes.sprint_speed, Player_Attributes.agility, Player_Attributes.acceleration FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT DISTINCT ta.buildUpPlaySpeedClass FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Italy Serie A' AND Match.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(m.home_team_goal) FROM Match m JOIN League l ON m.league_id = l.id WHERE l.name = 'Netherlands Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.finishing, pa.curve FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id ORDER BY p.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS games_count FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T.team_long_name FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id ORDER BY M.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.strength = ( SELECT MAX(strength) FROM Player_Attributes ) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(DISTINCT Player.id) * 100.0) / (SELECT COUNT(*) FROM Player) AS percentage FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height < 180 AND Player_Attributes.strength > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT Admission, COUNT(ID) AS MaleCount FROM Patient WHERE SEX = 'M' AND (Admission = '+' OR Admission = '-') GROUP BY Admission;  SELECT (CAST((InPatientCount - OutPatientCount) AS REAL) / OutPatientCount) * 100 AS PercentageDeviation FROM (SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS InPatientCount, SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS OutPatientCount FROM Patient WHERE SEX = 'M');\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT 100.0 * COUNT(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 END) / COUNT(ID) AS percentage_female_born_after_1930 FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100.0) AS Inpatient_Percentage FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN ID END) AS FLOAT) / COUNT(CASE WHEN Admission = '-' THEN ID END) AS RATIO FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Birthday)) AS Age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE strftime('%Y', p.Birthday) = '1937' AND l.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (CAST(COUNT(DISTINCT l.ID) AS REAL) / (SELECT COUNT(DISTINCT p.ID) FROM Patient p WHERE p.SEX = 'F')) * 100 AS FemalePercentageOutOfRange FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE p.SEX = 'F' AND (l.TP < 6.0 OR l.TP > 8.5);\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(e.`aCL IgG`) AS Average_aCL_IgG FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', \"First Date\") - strftime('%Y', Birthday)) AS AGE FROM Patient WHERE \"First Date\" IS NOT NULL AND Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT P.ID) FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE E.Thrombosis = 1 AND E.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND P.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(strftime('%Y', 'now') - strftime('%Y', Birthday)) - MIN(strftime('%Y', 'now') - strftime('%Y', Birthday)) AS age_gap FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE TG < 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Examination.Symptoms, Examination.Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Symptoms IS NOT NULL ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT Laboratory.ID) / 12.0 AS average_male_patients_per_month FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT Laboratory.Date, (strftime('%Y', Patient.`First Date`) - strftime('%Y', Patient.Birthday)) AS Age_At_Admission FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SJS%' ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(male_count AS REAL) / female_count AS male_to_female_ratio FROM (SELECT COUNT(DISTINCT p.ID) AS male_count FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.UA > 8.0 ) AS male, (SELECT COUNT(DISTINCT p.ID) AS female_count FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.5 ) AS female;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient p LEFT JOIN Examination e ON p.ID = e.ID WHERE e.ID IS NULL OR DATE(e.`Examination Date`) >= DATE(p.`First Date`, '+1 year');\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT e.ID) AS underage_patient_count FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE strftime('%Y', e.`Examination Date`) BETWEEN '1990' AND '1993' AND (strftime('%Y', e.`Examination Date`) - strftime('%Y', p.Birthday)) < 18;\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT e.Diagnosis, COUNT(e.Diagnosis) AS Count FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY e.Diagnosis ORDER BY Count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - CAST(STRFTIME('%Y', Birthday) AS INTEGER)) AS avg_age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-31';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday)) AS Age, Patient.Diagnosis FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID ORDER BY Laboratory.HGB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Abnormal' END AS Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis LIKE '%AORTITIS%' ORDER BY `First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT e.`aCL IgM` FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Diagnosis = 'SLE' AND p.Description = '1994-02-19' AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT p.SEX FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.GPT = 9 AND l.Date = '1992-06-12';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT strftime('%Y', Laboratory.Date) - strftime('%Y', Patient.Birthday) - (strftime('%m-%d', Laboratory.Date) < strftime('%m-%d', Patient.Birthday)) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA = 8.4 AND Laboratory.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(L.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.`First Date` = '1991-06-13' AND P.Diagnosis = 'SJS' AND strftime('%Y', L.Date) = '1995';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.`Diagnosis` = 'SLE' AND Examination.`Examination Date` = '1997-01-27';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT e.Symptoms FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Birthday = '1959-03-01' AND e.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) - SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) / SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END)) * 100 AS decrease_rate FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday = '1959-02-18' AND (l.Date LIKE '1981-11-%' OR l.Date LIKE '1981-12-%');\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Diagnosis LIKE '%Behcet%' AND e.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.Date BETWEEN '1987-07-06' AND '1996-01-31' AND l.GPT > 30 AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Thrombosis = 2 AND e.`ANA Pattern` = 'S' AND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN Laboratory.UA <= 6.5 THEN 1 END) * 100.0) / COUNT(*) AS Percentage FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981')) AS Percentage FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981' AND Diagnosis = 'BEHCET';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND e.`ANA Pattern` <> 'P';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP = '2+' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis LIKE '%SLE%' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT l.ID) AS UniquePatientsCount FROM Laboratory l WHERE strftime('%Y', l.Date) = '1997' AND (l.TP <= 6 OR l.TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT 100.0 * SUM(CASE WHEN p.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) / COUNT(*) AS Proportion FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Symptoms LIKE '%thrombocytopenia%'\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_females FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND e.Diagnosis = 'Behcet' AND p.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(exam.`Examination Date`, pat.`First Date`) AS Days_Before_Evaluation FROM Patient pat JOIN Examination exam ON pat.ID = exam.ID WHERE pat.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (Patient.SEX = 'M' AND Laboratory.UA <= 8.0) OR (Patient.SEX = 'F' AND Laboratory.UA <= 6.5) THEN 'Within Normal Range' ELSE 'Outside Normal Range' END AS Uric_Acid_Status FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE GOT >= 60 AND ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT DISTINCT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GOT < 60 AND strftime('%Y', l.Date) = '1994';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GPT >= 60 AND p.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT DISTINCT P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, CAST((strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS INT) AS Age FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT p.ID, p.Admission FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID, CASE WHEN Laboratory.ALP < 300 THEN 'Yes' ELSE 'No' END AS ALP_Normal FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT l.ID, l.Date, l.TP, (l.TP - 8.5) AS TP_Deviation FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.TP > 8.5 AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.ALB FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB <= 3.5 OR Laboratory.ALB >= 5.5) ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.Date, Laboratory.ALB, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Normal Range' ELSE 'Outside Range' END AS Albumin_Range FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) = '1982';\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(DISTINCT L.ID) * 100.0) / COUNT(DISTINCT P.ID) AS Percentage FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA > 6.5;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(Lab.UA) AS Average_UA_Index FROM ( SELECT L.ID, L.UA, ROW_NUMBER() OVER (PARTITION BY L.ID ORDER BY L.Date DESC) AS Row_Num FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE (P.SEX = 'M' AND L.UA < 8.0) OR (P.SEX = 'F' AND L.UA < 6.5) ) AS Lab WHERE Lab.Row_Num = 1;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND Laboratory.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRE >= 1.5 AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN p.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN p.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS TOrF FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT SEX, GROUP_CONCAT(DISTINCT Laboratory.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT p.ID, l.`T-CHO` FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.`T-CHO` IS NOT NULL ORDER BY p.Birthday ASC, l.`T-CHO` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(P.Birthday)) AS average_age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT DISTINCT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT P.ID) AS PatientsOver50WithHighTG FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956' AND Patient.SEX = 'M' AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT DISTINCT Patient.ID, Laboratory.GLU FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Description) = '1991' AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0 GROUP BY Patient.ID, Patient.SEX ORDER BY strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) ASC, strftime('%m', Patient.Birthday) ASC, strftime('%d', Patient.Birthday) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT DISTINCT p.ID, p.Diagnosis, STRFTIME('%Y', 'now') - STRFTIME('%Y', p.Birthday) AS Age FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT DISTINCT p.ID, p.SEX, p.Birthday, l.RBC, p.Admission FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', p.Birthday) AS INTEGER)) >= 50 AND (l.RBC <= 3.5 OR l.RBC >= 6.0) AND p.Admission IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT pa.ID, pa.SEX FROM Patient pa JOIN Laboratory la ON pa.ID = la.ID WHERE pa.Admission = '-' AND la.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT p.ID, p.SEX FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17 ORDER BY p.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT p.ID, strftime('%Y', 'now') - strftime('%Y', p.Birthday) AS Age FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.HCT >= 52 GROUP BY p.ID HAVING COUNT(l.Date) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE HCT < 29 AND Date LIKE '1991%';\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE PLT < 100 OR PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT p.ID, p.SEX FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE strftime('%Y', l.Date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 50 AND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT COALESCE(100.0 * SUM(CASE WHEN p.SEX = 'F' AND l.PT >= 14 THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN l.PT >= 14 THEN 1 ELSE 0 END), 0), 0) AS percentage_female_abnormal_PT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE strftime('%Y', 'now') - strftime('%Y', p.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE strftime('%Y', p.`First Date`) > '1992' AND l.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE `Examination Date` > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.APTT > 45 AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT l.ID) FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE p.SEX = 'M' AND l.WBC > 3.5 AND l.WBC < 9.0 AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG < 150 OR Laboratory.FG > 450);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.`U-PRO` >= '30';\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT DISTINCT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SLE' AND l.`U-PRO` > 0 AND l.`U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT l.ID) FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.IGG > 900 AND l.IGG < 2000 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.IGA BETWEEN 80 AND 500 ORDER BY l.IGA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGA > 80 AND l.IGA < 500 AND date(p.`First Date`) >= date('1990-01-01');\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGM <= 40 OR l.IGM >= 400 GROUP BY p.Diagnosis ORDER BY COUNT(p.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRP = '+' AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.RA IN ('-', '+-') AND e.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday > '1985-01-01' AND l.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 60 AND CAST(L.RF AS INTEGER) < 20;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CAST(Laboratory.RF AS REAL) < 20 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE e.`ANA Pattern` = 'P' AND l.C3 > 35;\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT e.ID FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE (l.HCT <= 29 OR l.HCT >= 52) ORDER BY e.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 1 -- Patients with blood clots AND l.C4 > 10; -- Normal level of complement 4\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE (l.RNP = '-' OR l.RNP = '+-') AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RNP NOT IN ('-', '+-') ORDER BY p.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE (l.SM = '-' OR l.SM = '+-') AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SM NOT IN ('negative', '0') ORDER BY Patient.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Examination.ID FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND (e.Symptoms IS NULL OR e.Symptoms = '') AND (l.SC170 = 'negative' OR l.SC170 = '0');\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE YEAR(p.`First Date`) < 2000 AND l.SSA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.SSA NOT IN ('negative', '0') ORDER BY p.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE e.Diagnosis = 'SLE' AND l.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT e.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.SSB IN ('negative', '0') AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.CENTROMEA IN ('-', '\u2022') AND l.SSB IN ('-', '\u2022');\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA IS NOT NULL AND CAST(l.DNA AS INTEGER) < 8 AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT 100.0 * COUNT(DISTINCT Lab.ID) / (SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE GOT >= 60) AS Percentage FROM Laboratory Lab JOIN Patient Pat ON Lab.ID = Pat.ID WHERE Lab.GOT >= 60 AND Pat.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GOT >= 60 ORDER BY p.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT p.Birthday FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.GPT < 60 ORDER BY l.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GPT < 60;\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(Patient.`First Date`) AS FirstRecordedDate FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH < 500 GROUP BY Laboratory.ID ORDER BY MAX(Laboratory.LDH) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.`First Date`, p.Admission, p.Diagnosis, l.Date, l.LDH FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.`First Date` = (SELECT MAX(`First Date`) FROM Patient) AND l.LDH >= 500 ORDER BY l.Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT p.ID) AS NumPatients FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Admission = '-' AND l.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' AND Laboratory.TP > 6.0 AND Laboratory.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 ORDER BY Laboratory.ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.ALB > 3.5 AND l.ALB < 5.5 AND l.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.`aCL IgG`, e.`aCL IgM`, e.`aCL IgA` FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA <= 6.50 ORDER BY l.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(e.ANA) AS Highest_ANA_Level FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Examination.ID FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE < 1.5 ORDER BY Examination.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT e.ID) FROM Laboratory l JOIN Examination e ON l.ID = e.ID WHERE l.`T-BIL` >= 2.0 AND e.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.`T-BIL` < 1.2 ORDER BY Laboratory.`T-BIL` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT l.ID) FROM Laboratory l JOIN Examination e ON l.ID = e.ID WHERE l.`T-CHO` >= 250 AND e.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.`T-CHO` < 250 AND Examination.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory L JOIN Examination E ON L.ID = E.ID WHERE L.TG < 200 AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT p.Diagnosis FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.TG < 200 ORDER BY l.TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT L.ID FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE GLU > 180 ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU < 180 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Admission = '+' AND l.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SLE' AND l.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Laboratory.ID FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT l.PLT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'MCTD' AND l.PLT > 100 AND l.PLT < 400;\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(L.PT) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Exam.ID) FROM Examination Exam JOIN Laboratory Lab ON Exam.ID = Lab.ID WHERE Exam.Thrombosis IN (1, 2) AND Lab.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = \"Women's Soccer\";\t----- bird -----\tstudent_club",
    "1316": "SELECT m.phone FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE e.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = \"Women's Soccer\" AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT event.event_name FROM attendance JOIN event ON attendance.link_to_event = event.event_id GROUP BY event.event_id ORDER BY COUNT(attendance.link_to_member) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND strftime('%Y', event.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(DISTINCT e.event_id) AS num_meeting_events FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type = 'Meeting' GROUP BY e.event_id HAVING COUNT(a.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type <> 'Fundraiser' GROUP BY e.event_id HAVING COUNT(a.link_to_event) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) AS average_attendance_2020 FROM ( SELECT COUNT(a.link_to_member) AS attendance_count FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type = 'Meeting' AND e.event_date LIKE '2020%' GROUP BY e.event_id ) subquery;\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description FROM expense WHERE cost = (SELECT MAX(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE e.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT member.last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(income.amount) AS total_funds_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(b.spent) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Meeting' AND b.category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.short_state = 'IL';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(budget.spent) AS total_spent_on_advertisement FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_name = 'September Meeting' AND budget.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE (member.first_name = 'Pierce' OR member.last_name = 'Pierce') AND (member.first_name = 'Guidi' OR member.last_name = 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(b.amount) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT expense.expense_id, expense.expense_description, expense.approved FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) AS average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (SUBSTR(e.expense_date, 6, 2) = '09' OR SUBSTR(e.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SELECT COALESCE(SUM(b.spent), 0) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE SUBSTR(e.event_date, 1, 4) = '2019') - (SELECT COALESCE(SUM(b.spent), 0) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE SUBSTR(e.event_date, 1, 4) = '2020') AS diff;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O\\'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Meeting' AND budget.spent > budget.amount;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(budget.amount) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.status FROM expense ex JOIN budget b ON ex.link_to_budget = b.budget_id JOIN event e ON b.link_to_event = e.event_id WHERE ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT z.type FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Christof' AND m.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE i.source = 'Dues' ORDER BY i.date_received ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN budget.amount ELSE 0 END) / SUM(CASE WHEN event.event_name = 'October Meeting' THEN budget.amount ELSE 0 END) AS diff FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(b.amount) * 1.0 / (SELECT SUM(amount) FROM budget b2 JOIN event e2 ON b2.link_to_event = e2.event_id WHERE e2.event_name = 'November Speaker')) * 100 AS parking_percentage FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Parking' AND e.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT city, county, state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Amy' AND last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT expense.expense_description FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.remaining = ( SELECT MIN(remaining) FROM budget );\t----- bird -----\tstudent_club",
    "1366": "SELECT member.first_name, member.last_name FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event ORDER BY b.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT expense.expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = \"Women's Soccer\";\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT member.first_name, member.last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(b.spent / b.amount) AS spend_to_budget_ratio FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_id ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_spent FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name, m.last_name FROM attendance a JOIN member m ON a.link_to_member = m.member_id GROUP BY m.first_name, m.last_name HAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT member.first_name, member.last_name FROM member JOIN major ON member.link_to_major = major.major_id JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE major.major_name = 'Interior Design' AND event.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT member.first_name, member.last_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(e.cost) AS total_expense FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT member.first_name, member.last_name FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN member ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff' AND budget.event_status = 'Open';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member ORDER BY i.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name FROM expense ex JOIN event e ON ex.link_to_event = e.event_id ORDER BY ex.cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(e.cost) * 100.0) / (SELECT SUM(e2.cost) FROM expense e2 JOIN budget b2 ON e2.link_to_budget = b2.budget_id JOIN event ev2 ON b2.link_to_event = ev2.event_id) AS percentage_of_total_cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN major.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN major.major_name = 'Physics' THEN 1 ELSE 0 END), 0) AS ratio FROM member JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater' AND event.event_date LIKE '2019%';\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(attendance.link_to_event) AS number_of_events, major.major_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Advertisement' ORDER BY b.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT attendance.link_to_member FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = \"Women's Soccer\";\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(type = 'Community Service') * 100.0 / COUNT(event_id)) AS percentage_share FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT e.cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'September Speaker' AND e.expense_description LIKE '%Posters%';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT expense.expense_description, SUM(expense.cost) AS total_value FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY expense.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT b.category, b.amount FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_name = 'April Speaker' ORDER BY b.amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id, category, spent, remaining, amount, event_status, link_to_event FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT DISTINCT e.expense_description FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT e.expense_description FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT m.zip FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT member.position FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT event.type FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT category FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (CAST(SUM(CASE WHEN m.position = 'Member' AND maj.major_name = 'Business' THEN 1 ELSE 0 END) AS REAL) / COUNT(m.member_id)) * 100 AS business_major_percentage FROM member m JOIN major maj ON m.link_to_major = maj.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1426": "SELECT member.last_name, major.department, major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'Social' AND m.position = 'Vice President' AND e.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT member.last_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = \"Women's Soccer\" AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(i.amount) * 100.0) / COUNT(m.member_id) AS percentage FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE m.t_shirt_size = 'Medium' AND i.amount = 50;\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT a.link_to_event FROM attendance a JOIN expense e ON a.link_to_member = e.link_to_member WHERE e.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member WHERE e.approved = 'true' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND ma.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.email FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE e.cost > 20 AND e.expense_date BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Education' AND major.college = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(link_to_event)) AS percentage_over_budget FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(type = 'PO Box') * 100.0) / COUNT(zip_code) AS po_box_percentage FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event.event_name, event.location FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Pizza' AND ex.cost > 50 AND ex.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name || ' ' || m.last_name AS full_name, major.major_name FROM member m JOIN major ON m.link_to_major = major.major_id JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT DISTINCT z.city, z.county FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget JOIN member m ON ex.link_to_member = m.member_id JOIN zip_code z ON m.zip = z.zip_code WHERE ( SELECT COUNT(*) FROM income i WHERE i.link_to_member = m.member_id ) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) as total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id GROUP BY m.member_id HAVING COUNT(DISTINCT ev.event_id) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.position <> 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Parking' AND b.spent < ( SELECT AVG(spent) FROM budget WHERE category = 'Parking' );\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(e.cost) * 1.0 / (SELECT SUM(cost) FROM expense)) * 100 AS percentage_of_meeting_cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.budget_id FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Water, chips, cookies' ORDER BY e.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.last_name, m.phone FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE e.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT (CAST(SUM(CASE WHEN z.state = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN m.position = 'Member' THEN 1 ELSE 0 END) - CAST(SUM(CASE WHEN z.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN m.position = 'Member' THEN 1 ELSE 0 END)) AS percentage_difference FROM member m JOIN zip_code z ON m.zip = z.zip_code;\t----- bird -----\tstudent_club",
    "1459": "SELECT major.major_name, major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.amount FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description LIKE '%Posters%';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, maj.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) as total_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT z.city FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium gas';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS eur_to_czk_ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT y.CustomerID FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND y.Date LIKE '2012%' GROUP BY y.CustomerID ORDER BY SUM(y.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(ym.Consumption) / 12 AS AverageMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND ym.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' AND y.Date BETWEEN '201101' AND '201112' GROUP BY c.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT y.CustomerID) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND y.Date BETWEEN '201201' AND '201212' GROUP BY y.CustomerID HAVING SUM(y.Consumption) < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (IFNULL(SUM(CZK.Consumption), 0) - IFNULL(SUM(EUR.Consumption), 0)) AS ConsumptionDifference FROM (SELECT ym.CustomerID, ym.Consumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' AND ym.Date BETWEEN '201201' AND '201212') AS CZK FULL OUTER JOIN (SELECT ym.CustomerID, ym.Consumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND ym.Date BETWEEN '201201' AND '201212') AS EUR ON CZK.CustomerID = EUR.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(t.Date, 1, 4) AS Year, SUM(t.Amount * t.Price) AS TotalGasConsumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' GROUP BY Year ORDER BY TotalGasConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT c.Segment FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID GROUP BY c.Segment ORDER BY SUM(ym.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(y.Date, 1, 4) AS Year, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT ym.Date, MAX(ym.Consumption) FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND ym.Date BETWEEN '201301' AND '201312' GROUP BY ym.Date ORDER BY MAX(ym.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH Year2013Consumption AS ( SELECT y.CustomerID, y.Date, y.Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN '201301' AND '201312' AND c.Currency = 'CZK' ), SegmentLowestConsumption AS ( SELECT c.Segment, COUNT(*) AS NumCustomers, SUM(y.Consumption) AS TotalConsumption FROM Year2013Consumption y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment IN ('SME', 'LAM', 'KAM') GROUP BY c.Segment ORDER BY TotalConsumption ASC ), SegmentAverageConsumption AS ( SELECT Segment, TotalConsumption / CAST(NumCustomers AS REAL) AS AnnualAverageConsumption FROM SegmentLowestConsumption ) SELECT (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'SME') - (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'LAM') AS difsme, (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'LAM') - (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'KAM') AS diflamkam, (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'KAM') - (SELECT AnnualAverageConsumption FROM SegmentAverageConsumption WHERE Segment = 'SME') AS difkamsme ;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT c.Segment, ((SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2012' THEN y.Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END)) * 100 AS percentage_increase FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' GROUP BY c.Segment ORDER BY percentage_increase DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Date BETWEEN '201308' AND '201311' AND CustomerID = 6;\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS DiscountGasStationsDifference;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304') AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT CASE WHEN SMEs_CZK > SMEs_EUR THEN SMEs_CZK - SMEs_EUR ELSE 0 END AS diff FROM (SELECT (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') AS SMEs_CZK, (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS SMEs_EUR );\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT y.CustomerID, y.Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND c.Currency = 'EUR' AND y.Date = '201310' ORDER BY y.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Segment = 'KAM' ORDER BY ym.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = '201305' AND c.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(DISTINCT y.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT c.CustomerID) FROM customers c WHERE c.Segment = 'LAM')) AS Percentage FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND y.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS ValueForMoneyGasStations FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY ValueForMoneyGasStations DESC;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*)) * 100 AS Percentage_KAM_Euro FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '201202') AS Percentage FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS PercentagePremium FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = '201309' GROUP BY c.Segment ORDER BY TotalConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = '201206' AND c.Segment = 'SME' ORDER BY y.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS HighestMonthlyConsumption FROM yearmonth WHERE Date LIKE '2012%';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT y.CustomerID, MAX(SUM(y.Consumption)) AS MaxMonthlyConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' GROUP BY y.CustomerID ORDER BY MaxMonthlyConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE SUBSTR(ym.Date, 1, 6) = '201309';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT gasstations.ChainID FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT y.CustomerID) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT t.Time FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t.Price) AS AverageTotalPrice FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Amount * Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT gs.Country FROM transactions_1k t JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE t.Date = '2012-08-25' ORDER BY t.Time ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-26' AND t.Time < '13:00:00' AND c.Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = ( SELECT MIN(Date) FROM transactions_1k ) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT G.Country FROM transactions_1k T JOIN gasstations G ON T.GasStationID = G.GasStationID WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT ym.Date, ym.Consumption FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE t.Date = '2012-08-24' AND t.Price = 124.05 AND ym.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-26' AND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00' AND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = '201306' AND y.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.CardID = 667467 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT gasstations.Country FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (CAST(COUNT(DISTINCT t.CustomerID) AS FLOAT) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25')) * 100 AS percentage FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-25' AND c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS ConsumptionDecreaseRate FROM yearmonth AS y2012 JOIN transactions_1k AS t ON y2012.CustomerID = t.CustomerID JOIN yearmonth AS y2013 ON y2012.CustomerID = y2013.CustomerID WHERE y2012.Date LIKE '2012%' AND y2013.Date LIKE '2013%' AND t.Date = '2012-08-25' AND t.Price = 634.8;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT g.GasStationID, SUM(t.Amount * t.Price) AS TotalRevenue FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID GROUP BY g.GasStationID ORDER BY TotalRevenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(DISTINCT c.CustomerID) * 100.0 / COUNT(DISTINCT c_all.CustomerID)) AS premium_percentage FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN gasstations gs ON ym.CustomerID = gs.GasStationID  -- Assuming this is the intended join WHERE c.Segment = 'Premium' AND gs.Country = 'SVK' AND gs.Country IN (SELECT DISTINCT Country FROM gasstations WHERE Country = 'SVK') JOIN customers c_all ON c_all.CustomerID = ym.CustomerID WHERE gs.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(t.Price) AS TotalSpentAtGasStations, ym.Consumption AS SpentInJanuary2012 FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE t.CustomerID = 38508 AND ym.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID GROUP BY p.ProductID ORDER BY SUM(t.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, SUM(t.Price) AS TotalSpent, SUM(t.Price) / SUM(t.Amount) AS AvgPricePerItem, c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID GROUP BY c.CustomerID ORDER BY TotalSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.ProductID = 2 ORDER BY t.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT DISTINCT yearmonth.CustomerID, yearmonth.Consumption FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.ProductID = 5 AND transactions_1k.Price / transactions_1k.Amount > 29.00 AND yearmonth.Date = '201208';\t----- bird -----\tdebit_card_specializing"
}